<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>net.thoughtmerge</groupId>
  <artifactId>thoughtmerge-root</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <modules>
    <module>test</module>
  </modules>

  <properties>
    <!-- github server corresponds to entry in ~/.m2/settings.xml -->
    <github.global.server>github</github.global.server>

    <!-- Build Properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>

    <!-- Dependency Versions -->
    <no.content.version>99-empty</no.content.version>
    <slf4j.version>1.7.25</slf4j.version>
    <logback.version>1.2.3</logback.version>

    <!-- Plugin Versions -->
    <maven.compiler.plugin.version>3.6.2</maven.compiler.plugin.version>
    <maven.war.plugin.version>2.4</maven.war.plugin.version>
  </properties>


  <!-- //////////////////////////////////
  Dependency Management
  ////////////////////////////////// -->
  <dependencyManagement>
    <dependencies>
      <!-- Joda Time -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.9.9</version>
      </dependency>

      <!-- Apache Commons -->
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>

      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${no.content.version}</version>
      </dependency>

      <!-- Testing -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>3.4</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.8.0</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <!-- //////////////////////////////////
  Plugin Management
  ////////////////////////////////// -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
          <configuration>
            <altDeploymentRepository>internal.repo::default::file://${user.dir}/target/mvn-repo</altDeploymentRepository>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.12</version>
          <configuration>
            <merge>true</merge>
            <message>Maven artifacts for ${project.version}</message> <!-- git commit message -->
            <noJekyll>true</noJekyll>                                 <!-- disable webpage processing -->
            <outputDirectory>${user.dir}/target/mvn-repo</outputDirectory>  <!-- matches distribution management repository url -->
            <branch>refs/heads/mvn-repo</branch>                      <!-- remote branch name -->
            <includes>
              <include>**/*</include>
            </includes>
            <repositoryName>thoughtmerge</repositoryName>             <!-- github repo name -->
            <repositoryOwner>evangates</repositoryOwner>              <!-- github username -->
          </configuration>
          <executions>
            <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
            <execution>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>
<!--        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.plugin.version}</version>
        </plugin>-->
<!--        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty.plugin.version}</version>
          <configuration>
            <useTestScope>true</useTestScope>
          </configuration>
        </plugin>-->
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>version99</id>
      <!-- highly available repository serving empty artifacts -->
      <url>http://version99.qos.ch/</url>
    </repository>
  </repositories>

</project>